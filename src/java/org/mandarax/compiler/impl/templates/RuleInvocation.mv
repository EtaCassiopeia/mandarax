	@code{import org.mandarax.dsl.*;import org.mandarax.compiler.impl.*;}
	@code{head=rule.head;hterms=head.parameters;ctrl=new VariableBindings(context);body=rule.body;counter=new Counter();prereqRel=null;prereqRelName=null;ctrl.bind(head,query);}
		_derivation.log("@{rule.id}", DerivationController.RULE, DerivationController.NIL);
		
		// utility class used to keep track of variables bindings
		class _Bindings {
		@foreach{v:rule.variables}	private @{v.type.getName()} @{v.name} = @{ctrl.getBinding(v)};
		@end{}}
		final _bindings = new _Bindings();
		
		@foreach{prereq:body} @code{index=counter.next;}
		// apply prerequisite @{prereq}
		
		@if{index==1 && prereq instanceof FunctionInvocation && prereq.definedByRelationship} @code{prereqRel=prereq.relationship;prereqRelName=prereqRel.name;}
		final ResourceIterator<@{prereqRel.name}> iterator@{index} = @{prereqRel.name}InstancesImpl.@{ctrl.getQuery(prereq).name}(@{ctrl.printBoundParams(prereq.getParameters(),'_bindings','_derivation.push()')});
		
		@else{index>1 && prereq instanceof FunctionInvocation && prereq.definedByRelationship} @code{prereqRel=prereq.relationship;prereqRelName=prereqRel.name;}
		final ResourceIterator<@{prereqRel.name}> iterator@{index} =  new NestedIterator<@{prereqRelName}, @{rel.name}>(iterator@{index}) {
                	public ResourceIterator<@{rel.name}> getNextIterator(@{prereqRelName} object) {
                			// bind parameters @code{ctrl.bindPrereq(prereq,ctrl.getQuery(prereq))};
							@foreach{v:rule.variables}	_bindings.@{v.name} = @{ctrl.getBinding(v)};
							@end{}}
                    		return new SingletonIterator(new @{rel.name}(@{ctrl.printSlots(rel.slotDeclarations,'_bindings')}));
                	}
            	};
		
		@else{}@end{}@end{}
		
		// rule head	
		return new NestedIterator<@{prereqRelName}, @{rel.name}>(iterator@{index}) {
                	public ResourceIterator<@{rel.name}> getNextIterator(@{prereqRelName} object) {
                    		return new SingletonIterator(new @{rel.name}(@{ctrl.printSlots(rel.slotDeclarations,'_bindings')}));
                	}
            	};

		
		
		
	